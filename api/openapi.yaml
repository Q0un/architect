# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: UsersService API
    version: 0.0.1
paths:
    /api/signin:
        get:
            tags:
                - UsersService
            operationId: UsersService_SignIn
            parameters:
                - name: login
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SignInResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/signup:
        post:
            tags:
                - UsersService
            operationId: UsersService_SignUp
            parameters:
                - name: login
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SignUpResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tickets:
        get:
            tags:
                - UsersService
            operationId: UsersService_ListTickets
            parameters:
                - name: pageNum
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTicketsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - UsersService
            operationId: UsersService_CreateTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTicketHttpRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTicketResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tickets/like:
        put:
            tags:
                - UsersService
            operationId: UsersService_LikeTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LikeTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LikeTicketResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tickets/stats/top_tickets:
        get:
            tags:
                - UsersService
            operationId: UsersService_TopTickets
            parameters:
                - name: type
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TopTicketsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tickets/stats/top_users:
        get:
            tags:
                - UsersService
            operationId: UsersService_TopUsers
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TopUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tickets/stats/{id}:
        get:
            tags:
                - UsersService
            operationId: UsersService_TicketStats
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TicketStatsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tickets/view:
        put:
            tags:
                - UsersService
            operationId: UsersService_ViewTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ViewTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ViewTicketResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tickets/{id}:
        get:
            tags:
                - UsersService
            operationId: UsersService_GetTicket
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Ticket'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - UsersService
            operationId: UsersService_UpdateTicket
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTicketHttpRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTicketResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UsersService
            operationId: UsersService_DeleteTicket
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTicketResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/users:
        put:
            tags:
                - UsersService
            operationId: UsersService_EditInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EditInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EditInfoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateTicketHttpRequest:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
        CreateTicketResponse:
            type: object
            properties:
                id:
                    type: string
        DeleteTicketResponse:
            type: object
            properties: {}
        EditInfoRequest:
            type: object
            properties:
                name:
                    type: string
                surname:
                    type: string
                birthday:
                    type: string
                mail:
                    type: string
                phone:
                    type: string
        EditInfoResponse:
            type: object
            properties: {}
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        LikeTicketRequest:
            type: object
            properties:
                id:
                    type: string
        LikeTicketResponse:
            type: object
            properties: {}
        ListTicketsResponse:
            type: object
            properties:
                tickets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Ticket'
        SignInResponse:
            type: object
            properties: {}
        SignUpResponse:
            type: object
            properties: {}
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Ticket:
            type: object
            properties:
                id:
                    type: string
                authorId:
                    type: string
                name:
                    type: string
                description:
                    type: string
        TicketInfo:
            type: object
            properties:
                ticketId:
                    type: string
                authorId:
                    type: string
                count:
                    type: string
        TicketStatsResponse:
            type: object
            properties:
                views:
                    type: string
                likes:
                    type: string
        TopTicketsResponse:
            type: object
            properties:
                top:
                    type: array
                    items:
                        $ref: '#/components/schemas/TicketInfo'
        TopUsersResponse:
            type: object
            properties:
                top:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
        UpdateTicketHttpRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
        UpdateTicketResponse:
            type: object
            properties: {}
        UserInfo:
            type: object
            properties:
                userId:
                    type: string
                likes:
                    type: string
        ViewTicketRequest:
            type: object
            properties:
                id:
                    type: string
        ViewTicketResponse:
            type: object
            properties: {}
tags:
    - name: UsersService
